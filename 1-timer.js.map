{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputDatePicker = document.querySelector('#datetime-picker');\nconst btnDateStart = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet intervalBack = null;\n\nbtnDateStart.disabled = true;\n\nflatpickr(inputDatePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate <= new Date()) {\n      btnDateStart.disabled = true;\n\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      btnDateStart.disabled = false;\n\n      iziToast.success({\n        title: 'Success',\n        message: 'Valid date selected!',\n      });\n    }\n  },\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst addLeadingZero = value => value.toString().padStart(2, '0');\n\nbtnDateStart.addEventListener('click', () => {\n  btnDateStart.disabled = true;\n  inputDatePicker.disabled = true;\n\n  intervalBack = setInterval(() => {\n    const nowDate = new Date();\n    const timeResult = userSelectedDate - nowDate;\n\n    const { days, hours, minutes, seconds } = convertMs(timeResult);\n\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n\n    const isTimerStop = [days, hours, minutes, seconds].every(\n      value => value === 0\n    );\n\n    if (isTimerStop) {\n      clearInterval(intervalBack);\n      inputDatePicker.disabled = false;\n    }\n  }, 1000);\n});"],"names":["inputDatePicker","btnDateStart","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","intervalBack","flatpickr","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","timeResult"],"mappings":"sFAMA,MAAMA,EAAkB,SAAS,cAAc,kBAAkB,EAC3DC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAe,KAEnBN,EAAa,SAAW,GAExBO,EAAUR,EAAiB,CACzB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQS,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAE9BH,GAAoB,IAAI,MAC1BL,EAAa,SAAW,GAExBS,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,IAEDT,EAAa,SAAW,GAExBS,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,sBACjB,CAAO,EAEJ,CACH,CAAC,EAED,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAiBC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAEhEjB,EAAa,iBAAiB,QAAS,IAAM,CAC3CA,EAAa,SAAW,GACxBD,EAAgB,SAAW,GAE3BO,EAAe,YAAY,IAAM,CAE/B,MAAMY,EAAab,EADH,IAAI,KAGd,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUQ,CAAU,EAE9DjB,EAAO,YAAce,EAAeJ,CAAI,EACxCV,EAAQ,YAAcc,EAAeH,CAAK,EAC1CV,EAAU,YAAca,EAAeF,CAAO,EAC9CV,EAAU,YAAcY,EAAeD,CAAO,EAE1B,CAACH,EAAMC,EAAOC,EAASC,CAAO,EAAE,MAClDE,GAASA,IAAU,CACzB,IAGM,cAAcX,CAAY,EAC1BP,EAAgB,SAAW,GAE9B,EAAE,GAAI,CACT,CAAC"}